@import url('https://fonts.googleapis.com/css2?family=Varela+Round&display=swap');

@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/talkify-playlist.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/talkify-common.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/colors.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/modern-control-center/main.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/modern-control-center/colors.css');
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/text-selection-activator/colors.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/text-selection-activator/main.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/local-control-center/main.css');
@import url('https://rawgit.com/Hagsten/Talkify/master/dist/styles/local-control-center/colors.css');


@font-face {
    font-family: 'Strike Lord';
    src: url('../res/fonts/Strikelord/Strikelord.ttf') format('truetype');
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

main {
    height: 100vh;
    background-image: url('../res/images/drawing_darkened_blurred.png');
    background-attachment: fixed;
    background-repeat: no-repeat;
    background-size: cover;
    color: white;
}

.main-button {
    padding: 20px 32px;
    border-radius: 48px;
    background: #eee;
    font-size: 2rem;
    text-decoration: none;
    color: #4e6450;
    transition: 0.3s ease-in-out;
    overflow: hidden;
    will-change: transform;
    cursor: pointer;
}

.main-button:before {
    content: "";
    display: block;
    position: absolute;
    width: 200%;
    height: 500%;
    border-radius: 100%;
    background: #4e6450;
    transform: translate(-120%, -50%);
    transition: 0.36s cubic-bezier(0.4, 0, 1, 1);
}

.main-button .text {
    display: inline;
    position: relative;
    width: 100%;
    height: 100%;
    color: #4e6450;
    transition: 0.25s ease-in;
    transition-delay: 0.1s;
}

.main-button:hover {
    box-shadow: inset -20px 30px 20px -10px #4e6450, inset 20px -30px 20px -10px #4e6450;
    transition-delay: .2s;
}

.main-button:hover .text {
    color: white;
}

.main-button:hover:before {
    transform: translate(-45%, -34%) translateZ(0);
}

#back {
    position: absolute;
    width: 50px;
    border-radius: 0 0 16px 0;
}

#question {
    filter: invert(1);
}

.title {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    width: fit-content;
    height: 12vh;
    margin: 5vh;
    padding: 0 30px;
    border-radius: 2px;
    background: #4e6450;
    font-size: calc(2vh + 1vw);
    color: white;
}

.title::before {
    content: "";
    position: absolute;
    right: -5.9vh;
    bottom: 0;
    width: 0;
    height: 0;
    border-bottom: 6vh solid transparent;
    border-left: 6vh solid #4e6450;
    border-top: 6vh solid transparent;
}

.title::after {
    content: "";
    position: absolute;
    left: -5.9vh;
    bottom: 0;
    width: 0;
    height: 0;
    border-bottom: 6vh solid transparent;
    border-right: 6vh solid #4e6450;
    border-top: 6vh solid transparent;
}

@media screen and (max-height: 565px) {

    .title::before,
    .title::after {
        border: none;
    }

    .title {
        border-radius: 24px;
        padding: 30px;
    }

}

.next-button {
    border: 0;
    position: relative;
    min-width: 180px;
    min-height: 60px;
    border-radius: 60px;
    color: #fff;
    font-weight: bold;
    font-family: 'Varela Round', sans-serif;
    font-size: 20px;
    background: rgba(0, 0, 0, 0.5);
    cursor: pointer;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 1rem;
    animation: moving-border 2s infinite;
}

.next-button .text,
.next-button .icon-container {
    position: relative;
    z-index: 2;
}

.next-button .icon-container {
    position: relative;
    width: 25px;
    height: 25px;
    margin-left: 15px;
    transition: transform 500ms ease;
}

.next-button .icon-container .icon {
    position: absolute;
    left: 0;
    top: 0;
    width: 25px;
    height: 25px;
    transition: transform 500ms ease, opacity 250ms ease;
}

.next-button .icon-container .icon--left {
    transform: translateX(-200%);
    opacity: 0;
}

.next-button .icon-container .icon svg {
    width: 100%;
    height: 100%;
    fill: #fff;
}

.next-button::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: #4e6450;
    border-radius: 60px;
    z-index: 1;
    transition: transform 500ms ease;
}

.next-button:hover::after {
    transform: translateX(65%);
}

.next-button:hover .icon-container {
    transform: translateX(70%);
}

.next-button:hover .icon-container .icon--left {
    transform: translateX(0);
    opacity: 1;
}

.next-button:hover .icon-container .icon--right {
    transform: translateX(200%);
    opacity: 0;
}

@keyframes moving-border {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 223, 0, 0.5);
    }

    50% {
        box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);
    }

    100% {
        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
    }
}

.input-effect input[type="txt"] {
    color: white;
    box-sizing: border-box;
    letter-spacing: 1px;
}

:focus {
    outline: none;
}

.input-effect {
    position: relative;
}

.effect {
    width: 220px;
    padding: 14px 15px;
    border: 0;
    border-bottom: 1px solid #ccc;
    border-radius: 4px 4px 0 0;
    background-color: rgba(190, 190, 190, .2);
    transition: .2s;
}

.effect:hover,
.effect:focus {
    background-color: rgba(190, 190, 190, .3);
}

.effect~.focus-border {
    position: absolute;
    background-color: white;
    transition: 0.4s;
}

.effect:focus~.focus-border {
    left: 0;
    width: 100%;
    transition: 0.4s;
}

.effect~label {
    position: absolute;
    left: 15px;
    top: 50%;
    z-index: 1;
    width: 100%;
    color: #bbb;
    transform: translateY(-50%);
    transition: 0.3s;
    letter-spacing: 0.5px;
    pointer-events: none;
}

.effect:focus~label {
    left: 10px;
    top: -16px;
    font-size: 12px;
    transition: 0.3s;
}

.effect:focus~label,
.effect:not(:placeholder-shown)~label {
    color: white;
}

.check::after,
.check::before {
    content: "";
    position: absolute;
}

.toggle.checkcross input {
    height: 28px;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: 28px;
}

.toggle-wrapper {
    overflow: hidden;
    position: relative;
    transform: rotate(180deg);
}

.toggle {
    position: relative;
    display: inline-block;
}

label.toggle-item {
    width: 4.2em;
    background: none;
    border: 2px solid white;
    height: 2em;
    display: inline-block;
    border-radius: 50px;
    position: relative;
    transition: all 0.3s ease;
    transform-origin: 20% center;
    cursor: pointer;
}

label.toggle-item:before {
    display: block;
    transition: all 0.2s ease;
    width: 1.5em;
    height: 1.5em;
    top: 2.2em;
    left: 2.2em;
    border-radius: 2em;
    border: 2px solid #88cf8f;
    transition: 0.3s ease;
}

.checkcross label:before {
    content: none;
}

.checkcross .check {
    border-radius: 50%;
    width: 1.6em;
    height: 1.6em;
    position: absolute;
    background: #8bc34a;
    transition: 0.4s ease;
    top: 1.5px;
    transform: rotate(180deg);
    left: 3.5px;
}

.checkcross .check:before,
.checkcross .check:after {
    height: 4px;
    border-radius: 10px;
    background: #fff;
    transition: 0.4s ease;
}

.checkcross .check:before {
    width: 17px;
    transform: rotate(-45deg) translate(-4px, 13px);
}

.checkcross .check:after {
    width: 7px;
    transform: rotate(45deg) translate(13px, 7px);
}

#checkcross:checked+label .check {
    left: 36px;
    transform: rotate(360deg);
    background: #c34a4a;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-bottom: 14px;
}

#checkcross:checked+label .check:before {
    width: 16px;
    transform: rotate(-45deg) translate(-5px, 5px);
}

#checkcross:checked+label .check:after {
    width: 16px;
    transform: rotate(45deg) translate(5px, 5px);
}